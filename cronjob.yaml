---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: external-secrets-manager
  namespace: vault
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      activeDeadlineSeconds: 100
      template:
        spec:
          serviceAccountName: external-secrets-manager-serviceacc
          containers:
          - name: external-secrets-manager
            image: rahulk789/external-secrets-manager
            envFrom:
            - secretRef:
                name: external-secrets-manager-env
          restartPolicy: OnFailure
---
apiVersion: v1
kind: Secret
metadata:
  name: external-secrets-manager-env
  namespace: vault
type: Opaque
data:
  VAULT_ADDRESS: your_base64_encoded_vault_address
  VAULT_TOKEN: your_base64_encoded_vault_token
  CLUSTER_SECRET_STORE: your_base64_encoded_cluster_secret_store_name
  ES_GIT_REPOSITORY: your_base64_encoded_git_repository_url
  GIT_USER: your_base64_encoded_github_username
  GIT_EMAIL: your_base64_encoded_github_email
  GIT_PASSWORD: your_base64_encoded_github_password_or_personal_access_token
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: external-secrets-manager-clusterrolebinding
  namespace: vault
subjects:
- kind: ServiceAccount
  name: external-secrets-manager-serviceacc # Name is case sensitive
  namespace: vault
roleRef:
  kind: ClusterRole
  name: external-secrets-manager-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-manager-serviceacc
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: external-secrets-manager-clusterrole
  resourceVersion: "77"
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
